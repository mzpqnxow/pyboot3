# Template/Example setuptools setup.cfg File
# ==============================================================================
# What to change:
#  - [metadata]:   Pretty much everything
#  - [versioneer]: The parentdir_prefix, versionfile_(source|build) variables 
#  - [options]:    install_requires (your dependencies, one per-line)
#
# That's all that's really required. Remember the following three things can
# be completely different:
#
#  - The package directory/directories
#  - The name of the project
#  - The GitHub repository of the project (if pip installing from GitHub)
#
# The following would be fine:
#  - oilfinder/ as the package name (e.g. import oilfinder)
#  - exxon.security.oilfinder as the package name
#  - https://github.com/mzpqnxow/exxon_oilfinder as a repository
#
# To install via pip, you would use:
#   $ pip install git+https://github.com/exxon-dev/exxon_oilfinder@master#egg=exxon.security.oilfinder
#
# To list as a dependency in another project, you would use the following for the master branch in [options]
#   install_requires = 'exxon.security.oilfinder @ git+https://github.com/mzpqnxow/exxon_oil@master#egg=exxon.security.oilfinder'
#
# If tagging or using branches, you can use, e.g. 0.0.2 if you have a 0.0.2 tag in [options]
#   install_requires = 'exxon.security.oilfinder @ git+https://github.com/mzpqnxow/exxon_oil@0.0.2#egg=exxon.security.oilfinder'
#
# Remember to make use of the convenience targets in the `Makefile`. The `release` target
# is very useful if you are using versioneer, it will autobump your tag minor revision and push
#

[metadata]
# ==============================================================================
description = A template repository for developing and deploying Python3 packages
maintainer = mzpqnxow
maintainer_email = copyright@mzpqnxow.com
author = mzpqnxow
author_email = copyright@mzpqnxow.com
url = https://github.com/mzpqnxow/pyboot3
# ==============================================================================
# IMPORTANT:    You *MUST* set a `name` value for your project!
# SUGGESTION:   Use namespacing to avoid public/private package naming collisions!
# ==============================================================================
# Example:
#   - Assume you work at Exxon, in the Information Security Risk Management Group
#   - Do the following:
#       $ mkdir oilfinder && touch oilfinder/__init__.py
#   - Use the next line as your project name:
name = exxon.isrm.pyoilfinder
requires-python = >=3.5
# Make sure the license-file exists or setuptools will fail to package!
license-file = COPYING
license = BSD-3-Clause

[versioneer]
# To be consistent with the example above, working as a developer for Exxon Security
# This is because your package is namespaced with exxon.isrm. Be sure to include the
# trailing dot!
parentdir_prefix = exxon.isrm.
versionfile_source = oilfinder/_version.py
versionfile_build = oilfinder/_version.py
# Don't change these three variables
VCS = git
style = pep440
tag_prefix = 
# Tag your repository, then you can start using versioneer and the convenient
# Makefile `release` target, which will auto-bump the version for you
# 
#   $ git tag 0.0.1 && git push --tags
#   $ versioneer install
#   $ make release
#

[options]
# I don't use this style/convention, so I leave package_dir out and let setuptools find
# it using find:
# package_dir = = src
packages = find:
zip_safe = false
include_package_data = true
python_requires = >=3
install_requires = 
    package_a
    package_b
    package_c
    package_d==2.23.0
    package_e @ git+https://github.com/user/package_e@0.0.21#egg=package_e

[pep8]
max-line-length = 140

[yapf]
based_on_style = pep8
spaces_before_comment = 2
split_before_logical_operator = true

[pycodestyle]
# select =
ignore = E501,W605

[flake8]
max-line-length = 140
doctests = False
exclude = .git, packages/ , __pycache__, tests/, docs/, build/, dist/, venv/, etc/

[clean]
all = 1

[pylint.]
ignore=.git,venv,packages,pybuild,Makefile,README.md,etc,_version.py
ignore-pattern=_version.py,versioneer.py
disable=consider-using-sys-exit,too-many-arguments,too-many-locals
max-line-length=140
good-names=i,ix,j,k,ex,Run,_,ip,df,nl,cr,np,pd,err,pp

[mypy-publicsuffixlist.*]
ignore_missing_imports = True

[mypy-*._version]
ignore_errors = True
