#
# Example setup.cfg if you want to use it as a template or reference
#

[metadata]
# ------------------------------------
# Change these values for your project
# ------------------------------------
description = A template repository for developing and deploying Python3 packages
maintainer = mzpqnxow
maintainer_email = copyright@mzpqnxow.com
author = mzpqnxow
author_email = copyright@mzpqnxow.com
url = https://github.com/mzpqnxow/pyboot3

#--------------------------------------------
# Do not change these values for your project
# -------------------------------------------
requires-python = >=3.5
license-file = COPYING
license = BSD-3-Clause


[options]
# Look into using this to remove more code from setup.py
# packages = find:
# package_dir = = src
packages = find:
zip_safe = false
include_package_data = true
python_requires = >=3
install_requires = 
    package_a
    package_b
    package_c
    package_d==2.23.0
    package_e @ git+https://github.com/user/package_e@0.0.21#egg=package_e


[yapf]
based_on_style = pep8
spaces_before_comment = 4
split_before_logical_operator = true

[pycodestyle]
# select =
ignore = E501,W605

[flake8]
max-line-length = 140
doctests = False
exclude = .git, packages/ , __pycache__, tests/, docs/, build/, dist/, venv/, etc/

[clean]
all = 1

[isort]
combine_as_imports = true
# force_alphabetical_sort = true
force_grid_wraps = true
force_single_line = false
force_sort_within_sections = true
force_to_top = true
import_heading_firstparty = first party
import_heading_stdlib = stdlib
import_heading_thirdparty = third party
include_trailing_comma = false
indent = 4
known_future_library = future
line_length = 45
multi_line_output = 3
not_skip = __init__.py
order_by_type = true
recursive = yes
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
skip = packages/*,venv/*,build/*
use_parentheses = true
virtual_env = venv


# You should use versioneer if you use git based source control
[versioneer]
#---------------------------------------------------------------
# Change this next bit, I suggest you namespace your packages to
# avoid name collisions for private and public repositories
#----------------------------------------------------------------
# parentdir_prefix = company.org.
# versionfile_source = yourproject/_version.py
# versionfile_build = yourproject/_version.py
VCS = git
style = pep440
tag_prefix = 


# If you use a namespace within a company, to avoid internal/external
# package naming collision
#
